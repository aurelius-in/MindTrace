[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    api: API tests
    database: Database tests
    security: Security tests
    performance: Performance tests
    slow: Slow running tests
    smoke: Smoke tests
    regression: Regression tests
    e2e: End-to-end tests

# Test execution
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=10
    --durations=10
    --color=yes
    --disable-warnings
    --import-mode=importlib

# Coverage settings
addopts = 
    --cov=backend
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --cov-branch

# Parallel execution
addopts = 
    -n auto
    --dist=loadfile

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore::FutureWarning

# Test timeout
timeout = 300

# Minimum version
minversion = 6.0

# Console output
console_output_style = progress

# Test session
test_session_startdir = .

# Environment variables
env =
    TESTING = true
    DATABASE_URL = sqlite:///:memory:
    REDIS_URL = redis://localhost:6379/1
    OPENAI_API_KEY = test_key
    ANTHROPIC_API_KEY = test_key
    JWT_SECRET_KEY = test_secret_key
    ENVIRONMENT = testing

# Plugins
required_plugins =
    pytest-cov
    pytest-asyncio
    pytest-mock
    pytest-html
    pytest-xdist
    pytest-timeout
    pytest-env
